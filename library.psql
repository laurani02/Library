------------------- LAB 1 ------------------- 
--             By Laura and Leo            --
--                                         --
--  Creating tables for schemas from HW1   --
--                                         --
--                  TODO:                  --
--    * 1NF: NO MULTIVALUED ATTRUBUTES     --
--    (AKA FIX AUTHOR, PREQUELM GENRE)     --
--        * 2NF, 3NF, BCNF: TBH IDK        --
---------------------------------------------

CREATE TABLE users (
    userID int PRIMARY KEY,
    fullName varchar(255) NOT NULL,
    email varchar(255) NOT NULL,
    address varchar(255) NOT NULL
);
CREATE TABLE students (
    userID int NOT NULL,
    programme varchar(255),
    CONSTRAINT FK_StudentUser
    FOREIGN KEY (userID)
    REFERENCES users(userID)
);
CREATE TABLE admins (
    userID int,
    phoneNumber int,
    department varchar(255),
    CONSTRAINT FK_AdminUser
    FOREIGN KEY (userID)
    REFERENCES users(userID)
);
CREATE TABLE book (
    ISBN int PRIMARY KEY,
    author varchar(255),
    title varchar(255) NOT NULL,
    publicationDate date,
    genre varchar(255),
    prequel varchar(255),
    languag varchar(255) NOT NULL,
    publisher varchar(255) NOT NULL,
    editn varchar(255)
);
CREATE TABLE physicalBook (
    physicalID int PRIMARY KEY,
    damage boolean NOT NULL,
    borrowed boolean NOT NULL,
    ISBN int NOT NULL,
    CONSTRAINT FK_BookIs
    FOREIGN KEY (ISBN)
    REFERENCES book(ISBN)
);
CREATE TABLE borrowing (
    borrowingID int PRIMARY KEY,
    borrowingDate date NOT NULL,
    dueDate date NOT NULL,
    dateReturned date, 
    physicalID int NOT NULL,
    CONSTRAINT FK_PhysicalBookBorrows
    FOREIGN KEY (physicalID)
    REFERENCES PhysicalBook(physicalID),
    userID int NOT NULL,
    CONSTRAINT FK_UserBorrows
    FOREIGN KEY (userID)
    REFERENCES Users(userID)
);

CREATE TABLE transactions (
    transactionID int PRIMARY KEY,
    paymentDate date NOT NULL,
    paymentMethod varchar(255) NOT NULL,
    fineID int NOT NULL,
    CONSTRAINT FK_FinesTransaction
    FOREIGN KEY (fineID)
    REFERENCES fines(fineID)
);
CREATE TABLE fines (
    fineID int PRIMARY KEY,
    amount int NOT NULL,
    paid boolean NOT NULL,
    transactionID int NOT NULL,
    CONSTRAINT FK_TransactionFine
    FOREIGN KEY (transactionID)
    REFERENCES transactions(transactionID),
    borrowingID int NOT NULL,
    CONSTRAINT FK_BorrowingFine
    FOREIGN KEY (borrowingID)
    REFERENCES borrowing(borrowingID)
);
